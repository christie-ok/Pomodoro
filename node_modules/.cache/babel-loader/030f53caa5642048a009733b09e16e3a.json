{"ast":null,"code":"import React from\"react\";import SessionTitles from\"./SessionTitles\";function Countdown(_ref){var session=_ref.session,isTimerRunning=_ref.isTimerRunning;var timerText=session.label===\"Focusing\"?session.focusDuration:session.breakDuration;var progressBar=function progressBar(secondsRemaining){if(session.label===\"Focusing\"){var _secondsElapsed=session.focusDuration*60-secondsRemaining;var _percentFill=_secondsElapsed/(session.focusDuration*60);return _percentFill*100;}var secondsElapsed=session.breakDuration*60-secondsRemaining;var percentFill=secondsElapsed/(session.breakDuration*60);return percentFill*100;};return/*#__PURE__*/React.createElement(\"div\",{hidden:!session.label},/*#__PURE__*/React.createElement(\"div\",{className:\"row mb-2\"},/*#__PURE__*/React.createElement(SessionTitles,{session:session,timerText:timerText,isTimerRunning:isTimerRunning})),/*#__PURE__*/React.createElement(\"div\",{className:\"row mb-2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"div\",{className:\"progress\",style:{height:\"20px\"}},/*#__PURE__*/React.createElement(\"div\",{className:\"progress-bar\",role:\"progressbar\",\"aria-valuemin\":\"0\",\"aria-valuemax\":\"100\",\"aria-valuenow\":progressBar(session.timeRemaining)// TODO: Increase aria-valuenow as elapsed time increases\n,style:{width:\"\".concat(progressBar(session.timeRemaining),\"%\")}// TODO: Increase width % as elapsed time increases\n})))));}export default Countdown;","map":{"version":3,"sources":["/Users/christie_okeefe/Thinkful/pomodoro/src/pomodoro/Countdown.js"],"names":["React","SessionTitles","Countdown","session","isTimerRunning","timerText","label","focusDuration","breakDuration","progressBar","secondsRemaining","secondsElapsed","percentFill","height","timeRemaining","width"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CAGA,QAASC,CAAAA,SAAT,MAA8C,IAA1BC,CAAAA,OAA0B,MAA1BA,OAA0B,CAAjBC,cAAiB,MAAjBA,cAAiB,CAE1C,GAAMC,CAAAA,SAAS,CAAIF,OAAO,CAACG,KAAR,GAAkB,UAAnB,CAAiCH,OAAO,CAACI,aAAzC,CAAyDJ,OAAO,CAACK,aAAnF,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,gBAAD,CAAsB,CACtC,GAAIP,OAAO,CAACG,KAAR,GAAkB,UAAtB,CAAkC,CAChC,GAAMK,CAAAA,eAAc,CAAGR,OAAO,CAACI,aAAR,CAAsB,EAAtB,CAA2BG,gBAAlD,CACA,GAAME,CAAAA,YAAW,CAAGD,eAAc,EAAER,OAAO,CAACI,aAAR,CAAsB,EAAxB,CAAlC,CACA,MAAOK,CAAAA,YAAW,CAAC,GAAnB,CACD,CACA,GAAMD,CAAAA,cAAc,CAAGR,OAAO,CAACK,aAAR,CAAsB,EAAtB,CAAyBE,gBAAhD,CACA,GAAME,CAAAA,WAAW,CAAGD,cAAc,EAAER,OAAO,CAACK,aAAR,CAAsB,EAAxB,CAAlC,CACA,MAAOI,CAAAA,WAAW,CAAC,GAAnB,CACF,CATH,CAWA,mBACA,2BAAK,MAAM,CAAE,CAACT,OAAO,CAACG,KAAtB,eAEI,2BAAK,SAAS,CAAC,UAAf,eACE,oBAAC,aAAD,EAAe,OAAO,CAAEH,OAAxB,CAAiC,SAAS,CAAEE,SAA5C,CAAuD,cAAc,CAAED,cAAvE,EADF,CAFJ,cAKI,2BAAK,SAAS,CAAC,UAAf,eACE,2BAAK,SAAS,CAAC,KAAf,eACE,2BAAK,SAAS,CAAC,UAAf,CAA0B,KAAK,CAAE,CAAES,MAAM,CAAE,MAAV,CAAjC,eACE,2BACE,SAAS,CAAC,cADZ,CAEE,IAAI,CAAC,aAFP,CAGE,gBAAc,GAHhB,CAIE,gBAAc,KAJhB,CAKE,gBAAgBJ,WAAW,CAACN,OAAO,CAACW,aAAT,CAAyB;AALtD,CAME,KAAK,CAAE,CAAEC,KAAK,WAAKN,WAAW,CAACN,OAAO,CAACW,aAAT,CAAhB,KAAP,CAAqD;AAN9D,EADF,CADF,CADF,CALJ,CADA,CAsBH,CAOD,cAAeZ,CAAAA,SAAf","sourcesContent":["import React from \"react\";\nimport SessionTitles from \"./SessionTitles\";\nimport PropTypes from 'prop-types';\n\nfunction Countdown({session, isTimerRunning}) {\n\n    const timerText = (session.label === \"Focusing\") ? session.focusDuration : session.breakDuration;\n\n    const progressBar = (secondsRemaining) => {\n        if (session.label === \"Focusing\") {\n          const secondsElapsed = session.focusDuration*60 - secondsRemaining;\n          const percentFill = secondsElapsed/(session.focusDuration*60)\n          return percentFill*100;\n        }\n         const secondsElapsed = session.breakDuration*60-secondsRemaining;\n         const percentFill = secondsElapsed/(session.breakDuration*60);\n         return percentFill*100;\n      }\n\n    return (\n    <div hidden={!session.label}>\n        {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\n        <div className=\"row mb-2\">\n          <SessionTitles session={session} timerText={timerText} isTimerRunning={isTimerRunning} />\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow= {progressBar(session.timeRemaining)} // TODO: Increase aria-valuenow as elapsed time increases\n                style={{ width: `${progressBar(session.timeRemaining)}%` }} // TODO: Increase width % as elapsed time increases\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n}\n\nCountdown.propTypes = {\n  session: PropTypes.object,\n  isTimerRunning: PropTypes.bool,\n}\n\nexport default Countdown;"]},"metadata":{},"sourceType":"module"}