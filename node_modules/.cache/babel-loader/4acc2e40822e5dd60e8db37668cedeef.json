{"ast":null,"code":"var _jsxFileName = \"/Users/christie_okeefe/Thinkful/pomodoro/src/pomodoro/SessionTitles.js\";\nimport React from \"react\";\nimport { secondsToDuration, minutesToDuration } from \"../utils/duration/index.js\";\nimport PropTypes from 'prop-types';\n\nfunction SessionTitles({\n  session,\n  timerText,\n  isTimerRunning\n}) {\n  if (!session.label) return null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, session.label, \" for \", minutesToDuration(timerText), \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, secondsToDuration(session.timeRemaining), \" remaining\"), /*#__PURE__*/React.createElement(\"p\", {\n    hidden: !(session && !isTimerRunning),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, \"PAUSED\"));\n}\n\nSessionTitles.propTypes = {\n  session: PropTypes.object,\n  timerText: PropTypes.number,\n  isTimerRunning: PropTypes.bool\n};\nexport default SessionTitles;","map":{"version":3,"sources":["/Users/christie_okeefe/Thinkful/pomodoro/src/pomodoro/SessionTitles.js"],"names":["React","secondsToDuration","minutesToDuration","PropTypes","SessionTitles","session","timerText","isTimerRunning","label","timeRemaining","propTypes","object","number","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,iBAAR,EAA2BC,iBAA3B,QAAmD,4BAAnD;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,aAAT,CAAuB;AAACC,EAAAA,OAAD;AAAUC,EAAAA,SAAV;AAAqBC,EAAAA;AAArB,CAAvB,EAA6D;AAC3D,MAAI,CAACF,OAAO,CAACG,KAAb,EAAoB,OAAO,IAAP;AACpB,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,OAAO,CAACG,KADX,WACuBN,iBAAiB,CAACI,SAAD,CADxC,aAFJ,eAMI;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACOL,iBAAiB,CAACI,OAAO,CAACI,aAAT,CADxB,eANJ,eASQ;AAAG,IAAA,MAAM,EAAE,EAAEJ,OAAO,IAAI,CAACE,cAAd,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATR,CADF;AAaD;;AAEDH,aAAa,CAACM,SAAd,GAA0B;AACxBL,EAAAA,OAAO,EAAEF,SAAS,CAACQ,MADK;AAExBL,EAAAA,SAAS,EAAEH,SAAS,CAACS,MAFG;AAGxBL,EAAAA,cAAc,EAAEJ,SAAS,CAACU;AAHF,CAA1B;AAMA,eAAeT,aAAf","sourcesContent":["import React from \"react\";\nimport {secondsToDuration, minutesToDuration} from \"../utils/duration/index.js\"\nimport PropTypes from 'prop-types';\n\nfunction SessionTitles({session, timerText, isTimerRunning}) {\n  if (!session.label) return null;\n  return (\n    <div className=\"col\">\n            {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\n        <h2 data-testid=\"session-title\">\n          {session.label} for {minutesToDuration(timerText)} minutes\n        </h2>\n            {/* TODO: Update message below correctly format the time remaining in the current session */}\n        <p className=\"lead\" data-testid=\"session-sub-title\">\n              {secondsToDuration(session.timeRemaining)} remaining\n            </p>\n            <p hidden={!(session && !isTimerRunning)}>PAUSED</p>\n          </div>\n    )\n}\n\nSessionTitles.propTypes = {\n  session: PropTypes.object,\n  timerText: PropTypes.number,\n  isTimerRunning: PropTypes.bool,\n}\n\nexport default SessionTitles;"]},"metadata":{},"sourceType":"module"}