{"ast":null,"code":"import React, { useState } from \"react\";\nexport const focusMinusClickHandler = () => {\n  if (focusDuration > 5) setFocusDuration(focusDuration - 5);\n};\nexport const breakMinusClickHandler = () => {\n  if (breakDuration > 1) setBreakDuration(breakDuration - 1);\n};\nexport const focusPlusClickHandler = () => {\n  if (focusDuration < 60) setFocusDuration(focusDuration + 5);\n};\nexport const breakPlusClickHandler = () => {\n  if (breakDuration < 15) setBreakDuration(breakDuration + 1);\n};\nexport const stopClickHandler = event => {\n  setSession(null);\n  setIsTimerRunning(false);\n  setFocusDuration(25);\n  setBreakDuration(5);\n};","map":{"version":3,"sources":["/Users/christie_okeefe/Thinkful/pomodoro/src/utils/ClickHandlers.js"],"names":["React","useState","focusMinusClickHandler","focusDuration","setFocusDuration","breakMinusClickHandler","breakDuration","setBreakDuration","focusPlusClickHandler","breakPlusClickHandler","stopClickHandler","event","setSession","setIsTimerRunning"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,MAAMC,sBAAsB,GAAG,MAAM;AACxC,MAAIC,aAAa,GAAG,CAApB,EAAuBC,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACtB,CAFE;AAIP,OAAQ,MAAME,sBAAsB,GAAG,MAAM;AACzC,MAAIC,aAAa,GAAG,CAApB,EAAuBC,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACxB,CAFK;AAIR,OAAQ,MAAME,qBAAqB,GAAG,MAAM;AACxC,MAAIL,aAAa,GAAG,EAApB,EAAwBC,gBAAgB,CAACD,aAAa,GAAC,CAAf,CAAhB;AACzB,CAFK;AAIR,OAAQ,MAAMM,qBAAqB,GAAG,MAAM;AACxC,MAAIH,aAAa,GAAG,EAApB,EAAwBC,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACzB,CAFK;AAIR,OAAQ,MAAMI,gBAAgB,GAAIC,KAAD,IAAW;AACxCC,EAAAA,UAAU,CAAC,IAAD,CAAV;AACAC,EAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAT,EAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAG,EAAAA,gBAAgB,CAAC,CAAD,CAAhB;AACD,CALK","sourcesContent":["import React, { useState } from \"react\";\n\nexport const focusMinusClickHandler = () => {\n    if (focusDuration > 5) setFocusDuration(focusDuration - 5)\n    }\n\nexport  const breakMinusClickHandler = () => {\n    if (breakDuration > 1) setBreakDuration(breakDuration - 1);\n  }\n\nexport  const focusPlusClickHandler = () => {\n    if (focusDuration < 60) setFocusDuration(focusDuration+5);\n  }\n\nexport  const breakPlusClickHandler = () => {\n    if (breakDuration < 15) setBreakDuration(breakDuration + 1);\n  }\n\nexport  const stopClickHandler = (event) => {\n    setSession(null);\n    setIsTimerRunning(false);\n    setFocusDuration(25);\n    setBreakDuration(5);\n  }\n\n"]},"metadata":{},"sourceType":"module"}