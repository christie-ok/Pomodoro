{"ast":null,"code":"import React from\"react\";import{secondsToDuration,minutesToDuration}from\"../utils/duration/index.js\";function SessionTitles(_ref){var session=_ref.session,timerText=_ref.timerText,isTimerRunning=_ref.isTimerRunning;if(!session.label)return null;return/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"h2\",{\"data-testid\":\"session-title\"},session.label,\" for \",minutesToDuration(timerText),\" minutes\"),/*#__PURE__*/React.createElement(\"p\",{className:\"lead\",\"data-testid\":\"session-sub-title\"},secondsToDuration(session.timeRemaining),\" remaining\"),/*#__PURE__*/React.createElement(\"p\",{hidden:!(session&&!isTimerRunning)},\"PAUSED\"));}export default SessionTitles;","map":{"version":3,"sources":["/Users/christie_okeefe/Thinkful/pomodoro/src/pomodoro/SessionTitles.js"],"names":["React","secondsToDuration","minutesToDuration","SessionTitles","session","timerText","isTimerRunning","label","timeRemaining"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,iBAAR,CAA2BC,iBAA3B,KAAmD,4BAAnD,CAGA,QAASC,CAAAA,aAAT,MAA6D,IAArCC,CAAAA,OAAqC,MAArCA,OAAqC,CAA5BC,SAA4B,MAA5BA,SAA4B,CAAjBC,cAAiB,MAAjBA,cAAiB,CAC3D,GAAI,CAACF,OAAO,CAACG,KAAb,CAAoB,MAAO,KAAP,CACpB,mBACE,2BAAK,SAAS,CAAC,KAAf,eAEI,0BAAI,cAAY,eAAhB,EACGH,OAAO,CAACG,KADX,SACuBL,iBAAiB,CAACG,SAAD,CADxC,YAFJ,cAMI,yBAAG,SAAS,CAAC,MAAb,CAAoB,cAAY,mBAAhC,EACOJ,iBAAiB,CAACG,OAAO,CAACI,aAAT,CADxB,cANJ,cASQ,yBAAG,MAAM,CAAE,EAAEJ,OAAO,EAAI,CAACE,cAAd,CAAX,WATR,CADF,CAaD,CAQD,cAAeH,CAAAA,aAAf","sourcesContent":["import React from \"react\";\nimport {secondsToDuration, minutesToDuration} from \"../utils/duration/index.js\"\nimport PropTypes from 'prop-types';\n\nfunction SessionTitles({session, timerText, isTimerRunning}) {\n  if (!session.label) return null;\n  return (\n    <div className=\"col\">\n            {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\n        <h2 data-testid=\"session-title\">\n          {session.label} for {minutesToDuration(timerText)} minutes\n        </h2>\n            {/* TODO: Update message below correctly format the time remaining in the current session */}\n        <p className=\"lead\" data-testid=\"session-sub-title\">\n              {secondsToDuration(session.timeRemaining)} remaining\n            </p>\n            <p hidden={!(session && !isTimerRunning)}>PAUSED</p>\n          </div>\n    )\n}\n\nSessionTitles.propTypes = {\n  session: PropTypes.object,\n  timerText: PropTypes.number,\n  isTimerRunning: PropTypes.bool,\n}\n\nexport default SessionTitles;"]},"metadata":{},"sourceType":"module"}